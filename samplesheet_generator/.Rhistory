index<- read_csv(file = "/Non-combinitorial Index (12).csv")
index<- read_csv(file = "Non-combinitorial Index (12).csv/Non-combinitorial Index (12).csv")
index<- read_csv(file = "Non-combinitorial Index (12).csv")
input <- read_csv("input.csv") ###change
unique_index <- unique(input$index)
new_index <- subset(index, index_plate %in% unique_index)
if (input$sequencer[1] == "novaseq" || input$sequencer[1] == "miseq" ){
update_index <-new_index %>%
select(Index_ID = index_name,Index= index_i7_revcom,Index2=index2_i5_revcom,well_id,index_plate)
} else {
update_index <- new_index %>%
select(Index_ID=index_name,Index=index_i7_revcom,Index2= index2_i5,well_id,index_plate)
}
update_index$LP_plate <- input$LP_plate[match(update_index$index_plate,input$index)]
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
date2<- Sys.Date()
update_update
index<- read_csv(file = "Non-combinitorial Index (12).csv")
input <- read_csv("input.csv") ###change
unique_index <- unique(input$index)
new_index <- subset(index, index_plate %in% unique_index)
input
input
input <- read_csv("~/code/darmanis_group_utils/samplesheet_generator/input.csv") ###change
input
dim(index)
dim(input)
unique_index <- unique(input$index)
new_index <- subset(index, index_plate %in% unique_index)
if (input$sequencer[1] == "novaseq" || input$sequencer[1] == "miseq" ){
update_index <-new_index %>%
select(Index_ID = index_name,Index= index_i7_revcom,Index2=index2_i5_revcom,well_id,index_plate)
} else {
update_index <- new_index %>%
select(Index_ID=index_name,Index=index_i7_revcom,Index2= index2_i5,well_id,index_plate)
}
update_index$LP_plate <- input$LP_plate[match(update_index$index_plate,input$index)]
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = ""))
library(tidyverse)
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
date2<- Sys.Date()
update_update
write_csv(update_update, paste(date2,"_sample_sheet.csv",sep='' ))
dim(date2)
dim(update_update)
library(tidyverse)
Study_ID <- "SCLUNG_NEXT6"
Study_Description <- "sclung_sclungnext6"
BioSample_ID<-''
BioSample_Description <- "scrnaseq_lungadeno_pt_samples"
Sample_ID <- c()
Sample_Owner <- "Ashley"
Organism <- "Human"
Host <- ''
Gender <-''
Tissue_Source <- ''
FACS_Markers <- ''
index<- read_csv(file = "Non-combinitorial Index (12).csv")
input <- read_csv("~/code/darmanis_group_utils/samplesheet_generator/input.csv") ###change
unique_index <- unique(input$index)
new_index <- subset(index, index_plate %in% unique_index)
if (input$sequencer[1] == "novaseq" || input$sequencer[1] == "miseq" ){
update_index <-new_index %>%
select(Index_ID = index_name,Index= index_i7_revcom,Index2=index2_i5_revcom,well_id,index_plate)
} else {
update_index <- new_index %>%
select(Index_ID=index_name,Index=index_i7_revcom,Index2= index2_i5,well_id,index_plate)
}
update_index$LP_plate <- input$LP_plate[match(update_index$index_plate,input$index)]
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
dim(input)
library(tidyverse)
Study_ID <- "SCLUNG_NEXT6"
Study_Description <- "sclung_sclungnext6"
BioSample_ID<-''
BioSample_Description <- "scrnaseq_lungadeno_pt_samples"
Sample_ID <- c()
Sample_Owner <- "Ashley"
Organism <- "Human"
Host <- ''
Gender <-''
Tissue_Source <- ''
FACS_Markers <- ''
index<- read_csv(file = "Non-combinitorial Index (12).csv")
input <- read_csv("~/code/darmanis_group_utils/samplesheet_generator/input.csv") ###change
unique_index <- unique(input$index)
new_index <- subset(index, index_plate %in% unique_index)
dim(input)
if (input$sequencer[1] == "novaseq" || input$sequencer[1] == "miseq" ){
update_index <-new_index %>%
select(Index_ID = index_name,Index= index_i7_revcom,Index2=index2_i5_revcom,well_id,index_plate)
} else {
update_index <- new_index %>%
select(Index_ID=index_name,Index=index_i7_revcom,Index2= index2_i5,well_id,index_plate)
}
update_index$LP_plate <- input$LP_plate[match(update_index$index_plate,input$index)]
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
if (input$sequencer[1] == "novaseq" || input$sequencer[1] == "miseq" ){
update_index <-new_index %>%
select(Index_ID = index_name,Index= index_i7_revcom,Index2=index2_i5_revcom,well_id,index_plate)
} else {
update_index <- new_index %>%
select(Index_ID=index_name,Index=index_i7_revcom,Index2= index2_i5,well_id,index_plate)
}
update_index$LP_plate <- input$LP_plate[match(update_index$index_plate,input$index)]
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
date2<- Sys.Date()
update_index$LP_plate
update_update
update_index
View(update_index)
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
View(input)
update_update <- update_index
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = ""))
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers)
update_update <- update_index %>%
add_column(Sample_ID = paste(update_index$well_id,'_',update_index$LP_plate, sep = "")) %>%
add_column(Study_ID, Study_Description,BioSample_Description,BioSample_ID,Sample_Owner,Sample_Name = update_update$Sample_ID,Index2_ID= update_update$Index_ID,Organism,Host,Gender, Tissue_Source, FACS_Markers) %>%
select(Study_ID,Study_Description,BioSample_ID,BioSample_Description,Sample_ID, Sample_Name, Sample_Owner, Index_ID, Index, Index2_ID, Index2,Organism, Host, Gender, Tissue_Source, FACS_Markers)
date2<- Sys.Date()
write_csv(update_update, paste(date2,"_sample_sheet.csv",sep='' ))
library(Seurat)
library(ggplot2)
library(tidyverse)
load(file = "~/Google Drive File Stream/My Drive/Mel/analysis/data/mel3.rObj")
load(file = "~/Google Drive File Stream/My Drive/Mel/analysis/data/mel3_subtiss2.rObj")
n.pcs <-15
res.used <- 1
subtiss2 <- FindClusters(object = subtiss2, reduction.type = "pca", dims.use = 1:n.pcs, resolution = res.used, print.output = 0, save.SNN = TRUE, k.param = 15, force.recalc = T)
subtiss2 <- FindClusters(object = subtiss2, reduction.type = "pca", dims.use = 1:n.pcs, resolution = res.used, print.output = 0, save.SNN = TRUE, k.param = 15, force.recalc = T)
subtiss2 <- RunTSNE(object = subtiss2, dims.use = 1:n.pcs, seed.use = 10, perplexity=40)
#pdf("~/Google Drive File Stream/My Drive/Mel/analysis/mel3_subtiss2_tSNEs.pdf")
TSNEPlot(object = subtiss2, do.label = T, pt.size = 1)
TSNEPlot(object = subtiss2, group.by="patient_id")
TSNEPlot(object = subtiss2, group.by="sample_color")
TSNEPlot(object = subtiss2, group.by="sample_type")
TSNEPlot(object = subtiss2, group.by="Anatomical_location")
#dev.off()
n.pcs <-15
res.used <- 1
subtiss2 <- FindClusters(object = subtiss2, reduction.type = "pca", dims.use = 1:n.pcs, resolution = res.used, print.output = 0, save.SNN = TRUE, k.param = 30, force.recalc = T)
subtiss2 <- RunTSNE(object = subtiss2, dims.use = 1:n.pcs, seed.use = 10, perplexity=40)
#pdf("~/Google Drive File Stream/My Drive/Mel/analysis/mel3_subtiss2_tSNEs.pdf")
TSNEPlot(object = subtiss2, do.label = T, pt.size = 1)
TSNEPlot(object = subtiss2, group.by="patient_id")
TSNEPlot(object = subtiss2, group.by="sample_color")
TSNEPlot(object = subtiss2, group.by="sample_type")
TSNEPlot(object = subtiss2, group.by="Anatomical_location")
#dev.off()
n.pcs <-15
res.used <- 1
subtiss2 <- FindClusters(object = subtiss2, reduction.type = "pca", dims.use = 1:n.pcs, resolution = res.used, print.output = 0, save.SNN = TRUE, k.param = 20, force.recalc = T)
subtiss2 <- RunTSNE(object = subtiss2, dims.use = 1:n.pcs, seed.use = 10, perplexity=40)
#pdf("~/Google Drive File Stream/My Drive/Mel/analysis/mel3_subtiss2_tSNEs.pdf")
TSNEPlot(object = subtiss2, do.label = T, pt.size = 1)
TSNEPlot(object = subtiss2, group.by="patient_id")
TSNEPlot(object = subtiss2, group.by="sample_color")
TSNEPlot(object = subtiss2, group.by="sample_type")
TSNEPlot(object = subtiss2, group.by="Anatomical_location")
#dev.off()
#pdf("~/Google Drive File Stream/My Drive/Mel/analysis//mel3_subtiss2_genes_to_check.pdf")
genes_to_check2_1 = c('TYR', 'MITF','DCT', 'TYRP1', 'MLANA', 'PMEL', 'SOX10', 'KIT')
FeaturePlot(subtiss2, genes_to_check2_1, pt.size = 1, cols.use = c("grey", "blue"), no.legend = FALSE)
VlnPlot(subtiss2, genes_to_check2_1)
DoHeatmap(object = subtiss2, genes.use = genes_to_check2_1, data.use = subtiss2@data, slim.col.label = TRUE, use.scaled = FALSE)
FeaturePlot(subtiss2, "nGenes", pt.size = 1, no.legend = FALSE)
VlnPlot(subtiss2, "nGenes")
#dev.off()
cc.genes <- readLines(con = "~/Downloads/cell_cycle_vignette_files/regev_lab_cell_cycle_genes.txt")
s.genes <- cc.genes[1:43]
g2m.genes <- cc.genes[44:97]
subtiss2 <- CellCycleScoring(object = subtiss2, s.genes = s.genes, g2m.genes = g2m.genes, set.ident = FALSE)
RunPCA(object = subtiss2, pc.genes = c(s.genes, g2m.genes), do.print = TRUE)
#pdf("~/Google Drive File Stream/My Drive/Mel/analysis/mel3_subtiss2_cellcycle.pdf")
PCAPlot(subtiss2, group.by="Phase", dim.1=1, dim.2=2)
head(subtiss2@meta.data)
TSNEPlot(object = subtiss2, do.return = TRUE, group.by = "Phase", pt.size = 1)
#dev.off()
subtiss2.markers <- FindAllMarkers(object = subtiss2, only.pos = TRUE, min.pct = 0.25, thresh.use = 0.25)
subtiss2.markers
top.markers.subtiss2 <- subtiss2.markers %>% group_by(cluster) %>% top_n(10, avg_logFC)
#pdf("~/Google Drive File Stream/My Drive/Mel/analysis/mel3_subtiss2_top_heat.pdf")
DoHeatmap(subtiss2, data.use = subtiss2@data, genes.use = top.markers.subtiss2$gene, use.scaled = F, slim.col.label = T, rotate.key = F, remove.key = F, group.cex = 9, group.spacing = 0)
#dev.off()
source("https://bioconductor.org/biocLite.R")
biocLite("GSVA")
browseVignettes("GSVA")
read.csv("~/Google Drive File Stream/My Drive/SC_LungTumor/Analysis/raw_data/ashleys_gct.csv")
ash <- read.csv("~/Google Drive File Stream/My Drive/SC_LungTumor/Analysis/raw_data/ashleys_gct.csv")
dim(ash)
ash1 <- read.csv("~/Google Drive File Stream/My Drive/SC_LungTumor/Analysis/raw_data/180519_NB501961_0110_AHMLH7BGX5.csv")
dim(ash1)
subtype_genes <- c('ERBB3','CEACAM6','TP63','ZEB2','CAV','KRT81','HNG1A')
DotPlot(pan.subtiss, subtype_genes, x.lab.rot = T, plot.legend = T)
subtype_genes <- c('ERBB3','CEACAM6','TP63','ZEB2','CAV1','KRT81','HNG1A')
DotPlot(pan.subtiss, subtype_genes, x.lab.rot = T, plot.legend = T)
subtype_genes <- c('ERBB3','CEACAM6','TP63','ZEB2','CAV1','KRT81','HNF1A')
DotPlot(pan.subtiss, subtype_genes, x.lab.rot = T, plot.legend = T)
DoHeatmap(pan.subtiss, genes.use = subtype_genes, use.scaled = F, data.use = pan.subtiss@raw.data)
DoHeatmap(pan.subtiss, genes.use = subtype_genes, use.scaled = F, data.use = pan.subtiss@raw.data, slim.col.label = T)
DoHeatmap(pan.subtiss, genes.use = subtype_genes, slim.col.label = T)
DoHeatmap(pan.subtiss, genes.use = subtype_genes, slim.col.label = T)
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T)
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T)
collisson_genes <- read.csv("~/Downloads/PDAC_subtype_genes.csv")
str(collisson_genes)
collisson_genes
collisson_genes <- as.list(read.csv("~/Downloads/PDAC_subtype_genes.csv"))
collisson_genes <- as.list(read.csv("~/Downloads/PDAC_subtype_genes.csv"))
collisson_genes
str(collisson_genes)
DoHeatmap(pan.subtiss, genes.use = collisson_genes, slim.col.label = T)
collisson_genes <- read.csv("~/Downloads/PDAC_subtype_genes.csv", header = F)
DoHeatmap(pan.subtiss, genes.use = collisson_genes, slim.col.label = T)
as.list(
collisson_genes
collisson_genes
collisson_genes
?DoHeatmap
str(subtype_genes)
collisson_genes <- as.character(read.csv("~/Downloads/PDAC_subtype_genes.csv"))
DoHeatmap(pan.subtiss, genes.use = collisson_genes, slim.col.label = T)
str(collisson_genes)
collisson_genes
collisson_genes <- as.list(read.csv("~/Downloads/PDAC_subtype_genes.csv"))
collisson_genes
collisson_genes <- as.list(read.csv("~/Downloads/PDAC_subtype_genes.csv", header = F))
collisson_genes
str(collisson_genes)
as.character(collisson_genes)
collisson_genes <- as.list(read.csv("~/Downloads/PDAC_subtype_genes.csv", header = F))
str(subtype_genes)
t <- as.vector(collisson_genes$V1)
t
class(t)
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T)
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F)
?DoHeatmap
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, group.cex = 0)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, group.by = pan.subtiss@meta.data$sample_tyoe)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, group.by = pan.subtiss@meta.data$plate)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, group.by = pan.subtiss)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, group.by = pan.subtiss@meta.data$protocol)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0)
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0)
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0, col.low = 'yellow', col.high = 'blue')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0, col.low = 'blue')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0, col.low = 'yellow')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0, col.mid = 'yellow')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0, col.low = 'yellow', col.mid = 'green', col.high = 'blue')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, group.spacing = 0, col.low = 'yellow', col.mid = 'green', col.high = 'blue')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, group.spacing = 0, col.low = 'yellow', col.high = 'blue')
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, slim.col.label = T)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = subtype_genes, use.scaled = F, data.use = pan.subtiss@raw.data, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = subtype_genes, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "blue", col.mid = "white", col.high = "darkred")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "darkblue", col.mid = "white", col.high = "darkred")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "blue", col.mid = "white", col.high = "darkred")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "blue", col.mid = "white", col.high = "darkred")
pdf("~/Desktop/Pan_QC/pdx_187/r_analysis/figs/top_genes_subtiss_colored.pdf")
pdf("~/Desktop/Pan_QC/pdx_187/r_analysis/figs/top_genes_subtiss_colored.pdf")
pdf("~/Desktop/Pan_QC/pdx_187/r_analysis/figs/top_genes_subtiss_colored.pdf")
pdf("~/Desktop/Pan/pdx_187/r_analysis/figs/Heatmaptopgenes_colored.pdf")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = T, col.low = "blue", col.mid = "white", col.high = "darkred")
dev.off()
TSNEPlot(object = pan.subtiss, do.label = T, pt.size = 2)
?TSNEPlot
pdf("~/Desktop/Pan_QC/pdx_187/r_analysis/figs/subtiss_tSNE_R01.pdf")
pdf("~/Desktop/Pan/pdx_187/r_analysis/figs/subtiss_tSNE_R01.pdf")
TSNEPlot(object = pan.subtiss, do.label = T, pt.size = 2)
#TSNEPlot(object = pan.subtiss, do.label = F, pt.size = 1, group.by="plate")
dev.off()
pdf("~/Desktop/Pan/pdx_187/r_analysis/figs/Heatmaptopgenes_colored.pdf")
DoHeatmap(pan.subtiss, genes.use = top.markers2$gene, use.scaled = T, slim.col.label = T, rotate.key = F, col.low = "blue", col.mid = "white", col.high = "darkred")
dev.off()
pan.subtiss
load("~/Desktop/Pan/xenograft_2/r_analysis/xeno_subtiss.rObj")
#pdf("~/Desktop/Pan_QC/xenosub_tSNE.pdf")
TSNEPlot(object = xeno.subtiss, do.label = T, pt.size = 1)
TSNEPlot(object = xeno.subtiss, do.label = F, pt.size = 1, group.by="sample.id")
#dev.off()
read_csv("~/Desktop/Pan/xenograft_2/r_analysis/xenosubtiss_clustermarkers.csv")
library(tidyverse)
xeno.subtiss.markers <- read_csv("~/Desktop/Pan/xenograft_2/r_analysis/xenosubtiss_clustermarkers.csv")
xeno.subtiss.markers <- read.csv("~/Desktop/Pan/xenograft_2/r_analysis/xenosubtiss_clustermarkers.csv", header = T)
top.markers.xeno <- x %>% group_by(cluster) %>% top_n(10, avg_logFC)
top.markers.xeno <- xeno.subtiss.markers %>% group_by(cluster) %>% top_n(10, avg_logFC)
top.markers.xeno
DoHeatmap(xeno.subtiss, heatmap_genes, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
heatmap_genes <- c('Amy2b','Cpa1','Ptf1a', 'GA010-pHR-SFFV-EGFP')
DoHeatmap(xeno.subtiss, heatmap_genes, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
xeno.subtiss
DoHeatmap(xeno.subtiss, heatmap_genes)
DoHeatmap(xeno.subtiss, genes.use = heatmap_genes, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(xeno.subtiss, genes.use = top.markers.xeno, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(xeno.subtiss, genes.use = top.markers.xeno$gene, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
top.markers.xeno <- xeno.subtiss.markers %>% group_by(cluster) %>% top_n(5, avg_logFC)
DoHeatmap(xeno.subtiss, genes.use = top.markers.xeno$gene, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
knitr::opts_chunk$set(echo = TRUE)
install.packages("R.utils", "utils", "graphics", "stats", "data.table", "mixtools", "GSEABase",
"SummarizedExperiment", "methods", "Biobase", "zoo", "DT", "NMF", "plotly",
"BiocStyle", "rmarkdown", "doMC", " doRNG", " zoo", "doParallel", "foreach","dynamicTreeCut")
knitr::opts_chunk$set(echo = TRUE)
# You might need to install some of these dependencies first:
install.packages("R.utils", "utils", "graphics", "stats", "data.table", "mixtools", "GSEABase",
"SummarizedExperiment", "methods", "Biobase", "zoo", "DT", "NMF", "plotly",
"BiocStyle", "rmarkdown", "doMC", " doRNG", " zoo", "doParallel", "foreach","dynamicTreeCut")
# GENIE3 (or GRNBoost2):
install.packages("http://bioconductor.org/packages/release/bioc/src/contrib/GENIE3_1.2.0.tar.gz", repos=NULL)
install.packages("R.utils", "utils", "graphics", "stats", "data.table", "mixtools", "GSEABase", "SummarizedExperiment", "methods", "Biobase", "zoo", "DT", "NMF", "plotly", "BiocStyle", "rmarkdown", "doMC", " doRNG", " zoo", "doParallel", "foreach", "dynamicTreeCut")
# AUCell:
install.packages("http://scenic.aertslab.org/downloads/Rpackages/AUCell_0.99.5.tar.gz", repos=NULL)
# RcisTarget:
install.packages("http://scenic.aertslab.org/downloads/Rpackages/RcisTarget_0.99.0.tar.gz", repos=NULL)
Human: install.packages("http://scenic.aertslab.org/downloads/databases/RcisTarget.hg19.motifDatabases.20k_0.1.1.tar.gz", repos=NULL)
install.packages("http://scenic.aertslab.org/downloads/databases/RcisTarget.hg19.motifDatabases.20k_0.1.1.tar.gz", repos=NULL)
core.data <-load("~/Google Drive File Stream/My Drive/SC_LungTumor/Analysis/R_objects/All_core_samples_Seurat_object.RData")
core.data
head(tiss_subset@raw.data)
180523_data <- write.csv(tiss_subset@raw.data, "~/Downloads/180523_data")
corelungdata <- write.csv(tiss_subset@raw.data, "~/Downloads/corelungdata.csv")
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_point(aes(colour=tiss_subset@meta.data$patient_id), size=3)
library(ggplot)
library(ggplot2)
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_point(aes(colour=tiss_subset@meta.data$patient_id), size=3)
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_point(aes(colour=tiss_subset@meta.data$patient_id), size=3) + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time (By Plate)") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
ggplot(lungupdate_nothora, aes(x = lungupdate_nothora$biopsy_date, y= lungupdate_nothora$sequenced_cells_passQC, shape=lungupdate_nothora$biopsy_type))
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type))
table(tiss_subset@meta.data$plate)
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_point(aes(colour=tiss_subset@meta.data$patient_id), size=3) + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time (By Plate)") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_bar(stat = "identity",aes(colour=tiss_subset@meta.data$patient_id), size=3) + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time (By Plate)") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
table(tiss_subset@meta.data$plate, tiss_subset@meta.data$patient_id)
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_point(aes(colour=tiss_subset@meta.data$patient_id), size=3) + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time (By Plate)") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
table(tiss_subset@meta.data$plate, tiss_subset@meta.data$biopsy_date)
ggplot(tiss_subset@meta.data, aes(x = tiss_subset@meta.data$biopsy_date, y= tiss_subset@meta.data$sequenced_cells_passQC, shape=tiss_subset@meta.data$biopsy_type)) + geom_point(aes(colour=tiss_subset@meta.data$patient_id), size=2) + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time (By Plate)") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
sum <- read.csv("~/Downloads/180419_sclung_sum.csv", header = TRUE)
biop.vs.ncells <- ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
biop.vs.ncells + guides(fill=guide_legend(title = "Biopsy Type"))
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells), fill=sum$patient_id) + geom_bar(aes(fill=sum$patient_id), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Patient ID")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#pdf("plate_yields_v_time.pdf")
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells, shape=sum$biopsy_type)) + geom_point(aes(colour=sum$patient_id), size=3) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
#dev.off()
sum <- read.csv("~/Desktop/Lung/plate_yield_checks/sclung_sum.csv", header = TRUE)
biop.vs.ncells <- ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
biop.vs.ncells + guides(fill=guide_legend(title = "Biopsy Type"))
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells), fill=sum$patient_id) + geom_bar(aes(fill=sum$patient_id), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Patient ID")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#pdf("plate_yields_v_time.pdf")
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells, shape=sum$biopsy_type)) + geom_point(aes(colour=sum$patient_id), size=3) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
#dev.off()
ggplot(sum, aes(x = sum$patient_id, y= sum$nCells, shape=sum$biopsy_type)) + geom_point(aes(colour=sum$patient_id), size=3) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells), fill=sum$patient_id) + geom_bar(position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Patient ID")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells), fill=sum$patient_id) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Patient ID")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
bio
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Patient ID")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Patient ID")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$plate_id, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "count") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "dodge", stat = "sum") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
?geom_bar
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "stack", stat = "count") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(tidyverse)
?select
sum_nothora <- select(sum, -biopsy_type=="Thoracentesis")
sum_nothora <- select(sum, -sum$biopsy_type=="Thoracentesis")
sum_nothora <- select(sum, starts_with("Thoracentesis"))
biop.vs.ncells <- ggplot(sum_nothora, aes(x = sum_nothora$biopsy_date, y= sum_nothora$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
dim(sum_nothora)
dim(sum)
dim(sum_nothora)
sum_nothora <- read.csv("~/Desktop/Lung/plate_yield_checks/sclung_sum_nothora.csv", header = TRUE)
biop.vs.ncells <- ggplot(sum_nothora, aes(x = sum_nothora$biopsy_date, y= sum_nothora$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
biop.vs.ncells + guides(fill=guide_legend(title = "Biopsy Type"))
sum <- read.csv("~/Desktop/Lung/plate_yield_checks/sclung_sum.csv", header = TRUE)
sum_nothora <- read.csv("~/Desktop/Lung/plate_yield_checks/sclung_sum_nothora.csv", header = TRUE)
biop.vs.ncells <- ggplot(sum_nothora, aes(x = sum_nothora$biopsy_date, y= sum_nothora$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
biop.vs.ncells + guides(fill=guide_legend(title = "Biopsy Type"))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum_nothora$sample_name, y= sum_nothora$nCells), fill=sum_nothora$biopsy_type) + geom_bar(aes(fill=sum_nothora$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum_nothora, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum, aes(x = sum$sample_name, y= sum$nCells), fill=sum$biopsy_type) + geom_bar(aes(fill=sum$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(sum_nothora, aes(x = sum_nothora$sample_name, y= sum_nothora$nCells), fill=sum_nothora$biopsy_type) + geom_bar(aes(fill=sum_nothora$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
biop.vs.ncells <- ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
biop.vs.ncells + guides(fill=guide_legend(title = "Biopsy Type"))
ggplot(sum_nothora, aes(x = sum_nothora$biopsy_date, y= sum_nothora$nCells, colour=biopsy_type)) + geom_point() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
biop.vs.ncells + guides(fill=guide_legend(title = "Biopsy Type"))
#pdf("plate_yields_v_time.pdf")
ggplot(sum, aes(x = sum$biopsy_date, y= sum$nCells, shape=sum$biopsy_type)) + geom_point(aes(colour=sum$patient_id), size=3) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
ggplot(sum_nothora, aes(x = sum_nothora$biopsy_date, y= sum_nothora$nCells, shape=sum_nothora$biopsy_type)) + geom_point(aes(colour=sum_nothora$patient_id), size=3) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(shape="Biopsy Type", colour="Patient ID")
#dev.off()
knitr::opts_chunk$set(echo = TRUE)
tfcat <- read.csv("~/Downloads/tfcat.txt")
tfcat <- read.csv("~/Downloads/tfcat.txt", header = T, sep = " ")
tfcat <- read.table("~/Downloads/tfcat.txt", header = T, sep = " ")
tfcat <- read.table("~/Downloads/tfcat.txt", header = T, sep = " ")
tfcat <- read.csv("~/Downloads/tfcat.txt", header = T, sep = " ")
tfcat_sub <- tfcat[ ,tfcat$Gene]
tfcat_sub <- tfcat[tfcat$Gene, ]
dim(tfcat)
dim(tfcat_sub)
tfcat
tfcat <- read.csv("~/Downloads/tfcat.txt", header = T, sep = "/t")
tfcat <- read.csv("~/Downloads/tfcat.txt", header = T, sep = "\t")
tfcat
tfcat_sub <- tfcat[tfcat$Gene, ]
dim(tfcat_sub)
dim(tfcat)
tfcat_sub
library(tidyverse)
tfcat
tfcat_human <- select(tfcat, tfcat$Species="Human")
tfcat_human <- select(tfcat, "Human")
?select
?filter
tfcat_human <- filter(tfcat, Species == "Human")
tfcat_human
tfcat_final <- filter(tfcat_human, Gene.ID != NA)
tfcat_final
tfcat_human
?is.na
is.na(tfcat_human) <- 1
tfcat_human
tfcat_human
tfcat
tfcat_human <- filter(tfcat, Species == "Human")
tfcat_human
is.na(tfcat_human)
tfcat_final <- na.omit(tfcat_human)
tfcat_final
write.csv(tfcat_final, "~/Downloads/tfcat_final.csv")
library(tidyverse)
Epithelial_tumor_list
colnames(tiss_subset@meta.data)
tiss_subset@meta.data$res.0.3
colnames(tiss_subset@meta.data)
tiss_subset@meta.data$free_annotation
ep_tiss <- filter(tiss_subset@meta.data, free_annotation == "Epithelial")
head(ep_tiss)
dim(ep_tiss)
unique(ep_tiss$patient_id)
table(ep_tiss$patient_id, unique)(ep_tiss$biopsy_date)
unique(ep_tiss)
unique(ep_tiss$patient_id)
unique(ep_tiss$biopsy_date)
#ep_tiss <- filter(tiss_subset@meta.data, free_annotation == "Epithelial")
#head(ep_tiss)
#dim(ep_tiss)
unique(ep_tiss$patient_id)
unique(ep_tiss$biopsy_date)
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0)
subtype_genes <- c('ERBB3','CEACAM6','TP63','ZEB2','CAV1','KRT81','HNF1A')
DoHeatmap(pan.subtiss, genes.use = subtype_genes, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
library(Seurat)
subtype_genes <- c('ERBB3','CEACAM6','TP63','ZEB2','CAV1','KRT81','HNF1A')
DoHeatmap(pan.subtiss, genes.use = subtype_genes, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = subtype_genes, slim.col.label = T)
collisson_genes <- as.list(read.csv("~/Downloads/PDAC_subtype_genes.csv", header = F))
t <- as.vector(collisson_genes$V1)
DoHeatmap(pan.subtiss, genes.use = t, group.spacing = 0, slim.col.label = T, col.low = "blue", col.mid = "white", col.high = "red")
DoHeatmap(pan.subtiss, genes.use = t, slim.col.label = T, data.use = pan.subtiss@raw.data, use.scaled = F, group.spacing = 0)
ggplot(sum_nothora, aes(x = sum_nothora$sample_name, y= sum_nothora$nCells), fill=sum_nothora$biopsy_type) + geom_bar(aes(fill=sum_nothora$biopsy_type), position = "stack", stat = "identity") + guides(fill=guide_legend(title = "Biopsy Type")) + theme_bw() + labs(x= "Biopsy Date", y= "nCells Passing QC") + ggtitle("Cells Passing QC Over Time") + theme(plot.title = element_text(hjust = 0.5)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + geom_hline(yintercept = 50)
TH178 <- filter(ep_tiss, patient_id == "TH178")
TH178
length(TH178)
TH178 <- filter(ep_tiss, patient_id == "TH178")
length(TH178)
TH178 <- filter(ep_tiss, patient_id == "TH178")
TH178
tiss_subset
dim(TH178)
